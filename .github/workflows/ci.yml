name: CI
on: [ push, pull_request ]

env:
  CI: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jvm: [ 8, 11, 14, 15 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: JDK${{ matrix.jvm }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: JDK${{ matrix.jvm }}-gradle-
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jvm }}
      - run: chmod +x ./gradlew
      - run: ./gradlew test
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.ref == 'main' }} # or master
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: JDK8-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: JDK8-gradle-
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/setup-node@v1
      - run: chmod +x ./gradlew
      - uses: cycjimmy/semantic-release-action@v2
        env:
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASSOWRD: ${{ secrets.SONATYPE_PASSOWRD }}
          GPG_PASSPHRASSE: ${{ secrets.GPG_PASSPHRASSE }}
          SLACK_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}/slack # we are using this execution for `semantic-release-slack-bot` https://discord.com/developers/docs/resources/webhook#execute-slackcompatible-webhook
        with:
          extra_plugins: |
            gradle-semantic-release-plugin
            @semantic-release/git
            semantic-release-slack-bot
